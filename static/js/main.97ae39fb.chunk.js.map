{"version":3,"sources":["containers/QuoteGenerator/QuoteGenerator.jsx","App.js","index.js"],"names":["body","document","getElementById","QuoteGenerator","props","style","backgroundColor","pallet","colorIdx","transition","id","className","selectedQuote","quote","author","href","title","onClick","event","preventDefault","window","open","type","assignNewQuoteIndex","App","state","quotes","index","Math","floor","random","colors","color","generateNewQuoteIndex","bind","fetch","then","res","json","setState","console","log","this","length","Number","isInteger","React","Component","rootElement","ReactDOM","render","StrictMode"],"mappings":"0TAGMA,G,MAAOC,SAASC,eAAe,SA2BtBC,EAxBQ,SAAAC,GAUrB,OAHAJ,EAAKK,MAAMC,gBAAkBF,EAAMG,OAAOH,EAAMI,UAChDR,EAAKK,MAAMI,WAAa,YAGtB,yBAAKC,GAAG,aACN,yBAAKA,GAAG,mBACN,yBAAKA,GAAG,OAAOC,UAAU,QAAQN,MAAO,CAAC,MAASD,EAAMG,OAAOH,EAAMI,UAAW,WAAe,cAAeJ,EAAMQ,cAAcC,OAClI,yBAAKH,GAAG,SAASC,UAAU,SAASN,MAAO,CAAC,MAASD,EAAMG,OAAOH,EAAMI,UAAW,WAAc,cAAjG,KAAkHJ,EAAMQ,cAAcE,SAExI,yBAAKJ,GAAG,WACN,uBAAIC,UAAU,QAAQD,GAAG,cAAcK,KAAK,2BAA2BC,MAAM,qBAAqB,4BAAQX,MAAO,CAAC,gBAAmBD,EAAMG,OAAOH,EAAMI,UAAW,WAAc,aAAcE,GAAG,eAAeO,QAfpM,SAAAC,GACjBA,EAAMC,iBACNC,OAAOC,KAAQ,yCAAf,YAA4DjB,EAAMQ,cAAcC,MAAhF,cAA2FT,EAAMQ,cAAcE,UAa2HH,UAAU,uBAA9I,UACpG,4BAAQW,KAAK,SAASZ,GAAG,YAAYL,MAAO,CAAC,gBAAmBD,EAAMG,OAAOH,EAAMI,UAAW,WAAc,aAAcG,UAAU,mBAAmBM,QAASb,EAAMmB,qBAAtK,gBChBeC,E,kDACnB,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,MAAQ,CACXC,OAAQ,GACRC,MAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,MAAO,MAET,EAAKC,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBAC7B,EAAKX,oBAAsB,EAAKA,oBAAoBW,KAAzB,gBAtBV,E,8MA2BTC,MA/BA,yIAgCHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAV,GAAM,OAAI,EAAKa,SAAS,CAAEb,OAAQA,O,sDAE1Cc,QAAQC,IAAR,M,4JAaF,OAAKC,KAAKjB,MAAMC,OAAOiB,OAGhBf,KAAKC,MAAMD,KAAKE,SAAWY,KAAKjB,MAAMC,OAAOiB,QAF3CH,QAAQC,IAAI,mC,4CAMrBC,KAAKH,SAAS,CAAEZ,MAAOe,KAAKT,wBAAyBD,MAAOJ,KAAKC,MAAMD,KAAKE,SAAWY,KAAKjB,MAAMM,OAAOY,Y,+BAGzG,IAAMpC,EAASmC,KAAKjB,MAAMM,OACpBvB,EAAWkC,KAAKjB,MAAMO,MAE5B,OACE,yBAAKrB,UAAU,OACb,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAgBH,SAAUA,EAAUD,OAAQA,EAAQK,cAAe8B,KAAK9B,cAAeW,oBAAqBmB,KAAKnB,yB,oCAxBrH,OAAImB,KAAKjB,MAAMC,OAAOiB,QAAWC,OAAOC,UAAUH,KAAKjB,MAAME,OAGpDe,KAAKjB,MAAMC,OAAOgB,KAAKjB,MAAME,OAF7B,O,GAtCoBmB,IAAMC,WCHjCC,G,MAAc/C,SAASC,eAAe,SAC5C+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFH,K","file":"static/js/main.97ae39fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './QuoteGenerator.css';\r\n\r\nconst body = document.getElementById('root');\r\n\r\n\r\nconst QuoteGenerator = props => {\r\n  // Helper function to call twitter share.\r\n  const shareQuote = event => {\r\n    event.preventDefault();\r\n    window.open(`${\"https://twitter.com/intent/tweet?text=\"} \"${props.selectedQuote.quote}\" -${props.selectedQuote.author}`);\r\n  }\r\n  //styles\r\n  body.style.backgroundColor = props.pallet[props.colorIdx];\r\n  body.style.transition = '1.5s ease';\r\n\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"quote-container\">\r\n        <div id='text' className='quote' style={{'color': props.pallet[props.colorIdx], 'transition' : '1.5s ease'}}>{props.selectedQuote.quote}</div>\r\n        <div id=\"author\" className='author' style={{'color': props.pallet[props.colorIdx], 'transition': '1.5s ease'}}>- {props.selectedQuote.author}</div>\r\n      </div>\r\n      <div id='buttons'>\r\n        <a  className='tweet' id='tweet-quote' href=\"twitter.com/intent/tweet\" title=\"tweet this quote!\" ><button style={{'backgroundColor': props.pallet[props.colorIdx], 'transition': '1.5s ease'}} id='tweet-button' onClick={shareQuote} className='button tweet-button'>Tweet</button></a>\r\n      <button type=\"button\" id=\"new-quote\" style={{'backgroundColor': props.pallet[props.colorIdx], 'transition': '1.5s ease'}} className=\"button new-quote\" onClick={props.assignNewQuoteIndex}>New Quote</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteGenerator;","import React from \"react\";\nimport \"./App.css\";\nimport ReactFCCtest from \"react-fcctest\";\nimport QuoteGenerator from './containers/QuoteGenerator/QuoteGenerator';\n\nconst API = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json'\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      quotes: [],\n      index: Math.floor(Math.random() * 100),\n      colors: [\n        '#16a085',\n        '#27ae60',\n        '#2c3e50',\n        '#f39c12',\n        '#e74c3c',\n        '#9b59b6',\n        '#FB6964',\n        '#342224',\n        '#472E32',\n        '#BDBB99',\n        '#77B1A9',\n        '#73A857'\n      ],\n      color: null\n    }\n    this.generateNewQuoteIndex = this.generateNewQuoteIndex.bind(this);\n    this.assignNewQuoteIndex = this.assignNewQuoteIndex.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      await fetch(API)\n        .then(res => res.json())\n        .then(quotes => this.setState({ quotes: quotes }))\n    } catch(e) {\n      console.log(e);\n    } \n  }\n\n  get selectedQuote() {\n    if(!this.state.quotes.length || !Number.isInteger(this.state.index)){\n      return [];\n    } else {\n      return this.state.quotes[this.state.index];\n    }\n  }\n\n  generateNewQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return console.log(\"array is empty or don't exist\");\n    }\n    return Math.floor(Math.random() * this.state.quotes.length);\n  }\n\n  assignNewQuoteIndex() {\n    this.setState({ index: this.generateNewQuoteIndex(), color: Math.floor(Math.random() * this.state.colors.length) });\n  }\n  render() {\n    const pallet = this.state.colors;\n    const colorIdx = this.state.color;\n    \n    return (\n      <div className=\"App\">\n        <ReactFCCtest />\n        <QuoteGenerator colorIdx={colorIdx} pallet={pallet} selectedQuote={this.selectedQuote} assignNewQuoteIndex={this.assignNewQuoteIndex}/>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}